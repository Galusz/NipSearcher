// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NipSearcher.Db;

#nullable disable

namespace NIPSearcher.Migrations
{
    [DbContext(typeof(CompanyDbContext))]
    [Migration("20230614080314_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("NipSearcher.Entities.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AccountId");

                    b.HasIndex("SubjectId");

                    b.ToTable("AccountNumbers");
                });

            modelBuilder.Entity("NipSearcher.Entities.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nip")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pesel")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("NipSearcher.Entities.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasVirtualAccounts")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Krs")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nip")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pesel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Regon")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResidenceAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("RestorationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("StatusVat")
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkingAddress")
                        .HasColumnType("TEXT");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("NipSearcher.Entities.Account", b =>
                {
                    b.HasOne("NipSearcher.Entities.Subject", "Subject")
                        .WithMany("Accounts")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("NipSearcher.Entities.Person", b =>
                {
                    b.HasOne("NipSearcher.Entities.Subject", "Subject")
                        .WithMany("Representatives")
                        .HasForeignKey("SubjectId");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("NipSearcher.Entities.Subject", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Representatives");
                });
#pragma warning restore 612, 618
        }
    }
}
